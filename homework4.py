#Yuory Sidortsou
#Homework-4
#17.03.2024
#Grodno-IT-Academy-Python 3.11.5

# теперь тесты написаны с использованием библиотеки pytest
# нам нужно ее установить: pip install pytest
# и запустить как обычный файл: pytest test_Homework4.py
# Теперь вы будете знакомы со вторым инструментом для тестирования


#Выведите n-ое число Фибоначчи, используя только временные переменные, циклические операторы и условные операторы. n - вводится.

def fibonacci(n):
# объявлем текущее число фибоначчи    
    fib = 0 
# объявлем следующее число фибоначчи
    f = 1
# итерируемся циклом по числам фибоначчи до n-1 
    for i in range(n-1):
# fib приравниваем к f, f приравниваем к fib + 1
        fib, f = f, fib + f
# возвращаем ряд чисел фибоначчи
    return fib
    # Решение хорошее

#Определите, является ли число палиндромом (читается слева направо и справа налево одинаково). Число положительное целое, произвольной длины. Задача требует работать только с числами (без конвертации числа в строку или что-нибудь еще).

def palindrome(n):
# объявляем переменную для хранения обратного числа   
    number_new = 0
# переменная для хранения введенного числа  
    number = n
# цикл, который будет выполняться пока n больше 0
    while n > 0:
# возвращаем последнюю цифру числа n
        num = n % 10
# добавляем извлеченную цифру к revers, умноженную на 10, чтобы развернуть цифры в обратную сторону  
        number_new = number_new * 10 + num
# применяем целочисленное деление для удаления последней цифры введенного числа
        n = n // 10
# проверяем равно ли перевернутое число исходному
    if number == number_new :
        return True
    else:
        return False
        # Решение хорошее
    

#Напишите генератор, который возвращает цифры от S до N, но вместо чисел, кратных 3 пишет Fizz, вместо чисел кратный 5 пишет Buzz, а вместо чисел одновременно кратных и 3 и 5 - FizzBuzz.

def fizz_buzz(S, N):
# определяем шаг генератора (отрицательный или положительный)
    step = 1 if S <= N else -1
# создаем генератор от S до N + шаг, с шагом step
    for i in range(S, N + step, step):
# проверяем условие кратность 3 и 5
        if i % 3 == 0 and i % 5 == 0:
# при выполнении условия возвращаем 'FizzBuzz'
            phrase = 'FizzBuzz'
            yield phrase
# проверяем условие кратность 3 
        elif i % 3 == 0:
# при выполнении условия возвращаем 'Fizz'
            phrase = 'Fizz'
            yield phrase
# проверяем условие кратность 5
        elif i % 5 == 0:
# при выполнении условия возвращаем 'Buzz'
            phrase = 'Buzz'
            yield phrase
# при не выполнении ни одного из условий возвращаем полученные данные преобразованные к строке
        else:
            phrase = str(i)
            yield phrase
    return phrase
    # Все верно
